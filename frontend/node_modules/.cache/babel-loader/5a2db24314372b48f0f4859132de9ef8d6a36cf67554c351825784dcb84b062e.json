{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msi laptop\\\\OneDrive - Universitas Islam Indonesia\\\\matchcare\\\\matchCare-system3\\\\frontend\\\\src\\\\context\\\\QuizContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizContext = /*#__PURE__*/createContext();\n\n// Initial state - sesuai dengan struktur yang sudah ada\nconst initialState = {\n  // Session info\n  sessionId: null,\n  currentStep: 1,\n  totalSteps: 3,\n  // Quiz data\n  skinType: null,\n  skinTypeMethod: 'self_selected',\n  concerns: [],\n  sensitivities: [],\n  // Reference data - IMPORTANT: initialize with empty arrays\n  referenceData: {\n    skin_types: [],\n    skin_concerns: [],\n    allergen_types: []\n  },\n  // Results\n  quizId: null,\n  recommendations: [],\n  isLoading: false,\n  error: null,\n  completed: false\n};\n\n// Actions - sama seperti sebelumnya\nconst quizActions = {\n  SET_SESSION_ID: 'SET_SESSION_ID',\n  SET_CURRENT_STEP: 'SET_CURRENT_STEP',\n  SET_SKIN_TYPE: 'SET_SKIN_TYPE',\n  SET_CONCERNS: 'SET_CONCERNS',\n  SET_SENSITIVITIES: 'SET_SENSITIVITIES',\n  SET_REFERENCE_DATA: 'SET_REFERENCE_DATA',\n  SET_LOADING: 'SET_LOADING',\n  SET_ERROR: 'SET_ERROR',\n  SET_QUIZ_RESULTS: 'SET_QUIZ_RESULTS',\n  RESET_QUIZ: 'RESET_QUIZ',\n  TOGGLE_CONCERN: 'TOGGLE_CONCERN',\n  TOGGLE_SENSITIVITY: 'TOGGLE_SENSITIVITY'\n};\n\n// Reducer function\nfunction quizReducer(state, action) {\n  switch (action.type) {\n    case quizActions.SET_SESSION_ID:\n      return {\n        ...state,\n        sessionId: action.payload,\n        error: null\n      };\n    case quizActions.SET_CURRENT_STEP:\n      return {\n        ...state,\n        currentStep: action.payload\n      };\n    case quizActions.SET_SKIN_TYPE:\n      return {\n        ...state,\n        skinType: typeof action.payload === 'string' ? action.payload : action.payload.skinType,\n        skinTypeMethod: typeof action.payload === 'object' ? action.payload.method || 'self_selected' : 'self_selected'\n      };\n    case quizActions.SET_CONCERNS:\n      return {\n        ...state,\n        concerns: Array.isArray(action.payload) ? action.payload : []\n      };\n    case quizActions.TOGGLE_CONCERN:\n      const concernExists = state.concerns.includes(action.payload);\n      return {\n        ...state,\n        concerns: concernExists ? state.concerns.filter(c => c !== action.payload) : [...state.concerns, action.payload]\n      };\n    case quizActions.SET_SENSITIVITIES:\n      return {\n        ...state,\n        sensitivities: Array.isArray(action.payload) ? action.payload : []\n      };\n    case quizActions.TOGGLE_SENSITIVITY:\n      const sensitivityExists = state.sensitivities.includes(action.payload);\n      return {\n        ...state,\n        sensitivities: sensitivityExists ? state.sensitivities.filter(s => s !== action.payload) : [...state.sensitivities, action.payload]\n      };\n    case quizActions.SET_REFERENCE_DATA:\n      return {\n        ...state,\n        referenceData: {\n          skin_types: action.payload.skin_types || [],\n          skin_concerns: action.payload.skin_concerns || [],\n          allergen_types: action.payload.allergen_types || []\n        },\n        error: null\n      };\n    case quizActions.SET_LOADING:\n      return {\n        ...state,\n        isLoading: Boolean(action.payload)\n      };\n    case quizActions.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false\n      };\n    case quizActions.SET_QUIZ_RESULTS:\n      return {\n        ...state,\n        quizId: action.payload.quiz_id,\n        recommendations: Array.isArray(action.payload.recommendations) ? action.payload.recommendations : [],\n        completed: true,\n        isLoading: false,\n        error: null\n      };\n    case quizActions.RESET_QUIZ:\n      return {\n        ...initialState,\n        referenceData: state.referenceData // Keep reference data\n      };\n    default:\n      return state;\n  }\n}\n\n// Context Provider\nexport function QuizProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(quizReducer, initialState);\n\n  // API Base URL\n  const API_BASE = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n  // Helper functions\n  const setLoading = useCallback(loading => {\n    dispatch({\n      type: quizActions.SET_LOADING,\n      payload: loading\n    });\n  }, []);\n  const setError = useCallback(error => {\n    dispatch({\n      type: quizActions.SET_ERROR,\n      payload: error\n    });\n  }, []);\n\n  // API Functions - ADD MISSING FUNCTIONS\n  const startQuiz = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('🚀 Starting quiz session...');\n      const response = await fetch(`${API_BASE}/quiz/start`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.success) {\n        dispatch({\n          type: quizActions.SET_SESSION_ID,\n          payload: data.data.session_id\n        });\n        console.log('✅ Quiz session started:', data.data.session_id);\n        return data.data.session_id;\n      } else {\n        throw new Error(data.message || 'Failed to start quiz');\n      }\n    } catch (error) {\n      console.error('❌ Start quiz error:', error);\n      setError(error.message || 'Failed to start quiz session');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  }, [API_BASE, setLoading, setError]);\n  const fetchReferenceData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('📋 Fetching reference data...');\n      const response = await fetch(`${API_BASE}/quiz/reference-data`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.success) {\n        console.log('✅ Reference data loaded:', data.data);\n        dispatch({\n          type: quizActions.SET_REFERENCE_DATA,\n          payload: data.data\n        });\n        return data.data;\n      } else {\n        throw new Error(data.message || 'Failed to fetch reference data');\n      }\n    } catch (error) {\n      console.error('❌ Fetch reference data error:', error);\n      setError(error.message || 'Failed to load quiz data');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  }, [API_BASE, setLoading, setError]);\n  const submitQuiz = useCallback(async () => {\n    if (!state.sessionId || !state.skinType) {\n      setError('Missing required quiz data');\n      return null;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('📝 Submitting quiz...', {\n        sessionId: state.sessionId,\n        skinType: state.skinType,\n        concerns: state.concerns,\n        sensitivities: state.sensitivities\n      });\n      const response = await fetch(`${API_BASE}/quiz/submit`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_id: state.sessionId,\n          skin_type: state.skinType,\n          concerns: state.concerns,\n          sensitivities: state.sensitivities\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.success) {\n        console.log('✅ Quiz submitted successfully:', data.data);\n        dispatch({\n          type: quizActions.SET_QUIZ_RESULTS,\n          payload: data.data\n        });\n        return data.data;\n      } else {\n        throw new Error(data.message || 'Failed to submit quiz');\n      }\n    } catch (error) {\n      console.error('❌ Submit quiz error:', error);\n      setError(error.message || 'Failed to submit quiz');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  }, [state.sessionId, state.skinType, state.concerns, state.sensitivities, API_BASE, setLoading, setError]);\n  const fetchRecommendations = useCallback(async (sessionId = state.sessionId) => {\n    if (!sessionId) {\n      setError('No session ID available');\n      return null;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('🎯 Fetching recommendations for:', sessionId);\n      const response = await fetch(`${API_BASE}/recommendations/${sessionId}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.success) {\n        console.log('✅ Recommendations loaded:', data.data.recommendations);\n        dispatch({\n          type: quizActions.SET_QUIZ_RESULTS,\n          payload: {\n            quiz_id: state.quizId || Date.now(),\n            recommendations: data.data.recommendations\n          }\n        });\n        return data.data.recommendations;\n      } else {\n        throw new Error(data.message || 'Failed to fetch recommendations');\n      }\n    } catch (error) {\n      console.error('❌ Fetch recommendations error:', error);\n      setError(error.message || 'Failed to load recommendations');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  }, [state.sessionId, state.quizId, API_BASE, setLoading, setError]);\n\n  // Basic Actions - KEEP EXISTING INTERFACE\n  const actions = {\n    // Data setters\n    setSessionId: sessionId => {\n      dispatch({\n        type: quizActions.SET_SESSION_ID,\n        payload: sessionId\n      });\n    },\n    setCurrentStep: step => {\n      dispatch({\n        type: quizActions.SET_CURRENT_STEP,\n        payload: step\n      });\n    },\n    setSkinType: (skinType, method = 'self_selected') => {\n      dispatch({\n        type: quizActions.SET_SKIN_TYPE,\n        payload: typeof skinType === 'string' ? skinType : {\n          skinType,\n          method\n        }\n      });\n    },\n    setConcerns: concerns => {\n      dispatch({\n        type: quizActions.SET_CONCERNS,\n        payload: concerns\n      });\n    },\n    toggleConcern: concern => {\n      dispatch({\n        type: quizActions.TOGGLE_CONCERN,\n        payload: concern\n      });\n    },\n    setSensitivities: sensitivities => {\n      dispatch({\n        type: quizActions.SET_SENSITIVITIES,\n        payload: sensitivities\n      });\n    },\n    toggleSensitivity: sensitivity => {\n      dispatch({\n        type: quizActions.TOGGLE_SENSITIVITY,\n        payload: sensitivity\n      });\n    },\n    setReferenceData: data => {\n      dispatch({\n        type: quizActions.SET_REFERENCE_DATA,\n        payload: data\n      });\n    },\n    setLoading,\n    setError,\n    setQuizResults: results => {\n      dispatch({\n        type: quizActions.SET_QUIZ_RESULTS,\n        payload: results\n      });\n    },\n    resetQuiz: () => {\n      dispatch({\n        type: quizActions.RESET_QUIZ\n      });\n    },\n    // Navigation helpers - KEEP EXISTING INTERFACE\n    nextStep: () => {\n      if (state.currentStep < state.totalSteps) {\n        dispatch({\n          type: quizActions.SET_CURRENT_STEP,\n          payload: state.currentStep + 1\n        });\n      }\n    },\n    prevStep: () => {\n      if (state.currentStep > 1) {\n        dispatch({\n          type: quizActions.SET_CURRENT_STEP,\n          payload: state.currentStep - 1\n        });\n      }\n    },\n    // Validation helpers - KEEP EXISTING INTERFACE\n    isCurrentStepValid: () => {\n      switch (state.currentStep) {\n        case 1:\n          return !!state.skinType;\n        case 2:\n          return true;\n        // Concerns are optional\n        case 3:\n          return true;\n        // Sensitivities are optional\n        default:\n          return false;\n      }\n    },\n    canProceedToNext: () => {\n      return actions.isCurrentStepValid() && state.currentStep < state.totalSteps;\n    },\n    canGoBack: () => {\n      return state.currentStep > 1;\n    },\n    // API Functions - ADD MISSING FUNCTIONS\n    startQuiz,\n    fetchReferenceData,\n    submitQuiz,\n    fetchRecommendations\n  };\n  const value = {\n    ...state,\n    ...actions\n  };\n  return /*#__PURE__*/_jsxDEV(QuizContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 422,\n    columnNumber: 5\n  }, this);\n}\n\n// Custom hook\n_s(QuizProvider, \"2dwmF46hhgCEB/ghnG0E/S0mgpk=\");\n_c = QuizProvider;\nexport function useQuiz() {\n  _s2();\n  const context = useContext(QuizContext);\n  if (!context) {\n    throw new Error('useQuiz must be used within a QuizProvider');\n  }\n  return context;\n}\n_s2(useQuiz, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport { quizActions };\nexport default QuizContext;\nvar _c;\n$RefreshReg$(_c, \"QuizProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useCallback","jsxDEV","_jsxDEV","QuizContext","initialState","sessionId","currentStep","totalSteps","skinType","skinTypeMethod","concerns","sensitivities","referenceData","skin_types","skin_concerns","allergen_types","quizId","recommendations","isLoading","error","completed","quizActions","SET_SESSION_ID","SET_CURRENT_STEP","SET_SKIN_TYPE","SET_CONCERNS","SET_SENSITIVITIES","SET_REFERENCE_DATA","SET_LOADING","SET_ERROR","SET_QUIZ_RESULTS","RESET_QUIZ","TOGGLE_CONCERN","TOGGLE_SENSITIVITY","quizReducer","state","action","type","payload","method","Array","isArray","concernExists","includes","filter","c","sensitivityExists","s","Boolean","quiz_id","QuizProvider","children","_s","dispatch","API_BASE","process","env","REACT_APP_API_URL","setLoading","loading","setError","startQuiz","console","log","response","fetch","headers","ok","Error","status","data","json","success","session_id","message","fetchReferenceData","submitQuiz","body","JSON","stringify","skin_type","fetchRecommendations","Date","now","actions","setSessionId","setCurrentStep","step","setSkinType","setConcerns","toggleConcern","concern","setSensitivities","toggleSensitivity","sensitivity","setReferenceData","setQuizResults","results","resetQuiz","nextStep","prevStep","isCurrentStepValid","canProceedToNext","canGoBack","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useQuiz","_s2","context","$RefreshReg$"],"sources":["C:/Users/msi laptop/OneDrive - Universitas Islam Indonesia/matchcare/matchCare-system3/frontend/src/context/QuizContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useCallback } from 'react';\r\n\r\nconst QuizContext = createContext();\r\n\r\n// Initial state - sesuai dengan struktur yang sudah ada\r\nconst initialState = {\r\n  // Session info\r\n  sessionId: null,\r\n  currentStep: 1,\r\n  totalSteps: 3,\r\n  \r\n  // Quiz data\r\n  skinType: null,\r\n  skinTypeMethod: 'self_selected',\r\n  concerns: [],\r\n  sensitivities: [],\r\n  \r\n  // Reference data - IMPORTANT: initialize with empty arrays\r\n  referenceData: {\r\n    skin_types: [],\r\n    skin_concerns: [],\r\n    allergen_types: []\r\n  },\r\n  \r\n  // Results\r\n  quizId: null,\r\n  recommendations: [],\r\n  isLoading: false,\r\n  error: null,\r\n  completed: false\r\n};\r\n\r\n// Actions - sama seperti sebelumnya\r\nconst quizActions = {\r\n  SET_SESSION_ID: 'SET_SESSION_ID',\r\n  SET_CURRENT_STEP: 'SET_CURRENT_STEP',\r\n  SET_SKIN_TYPE: 'SET_SKIN_TYPE',\r\n  SET_CONCERNS: 'SET_CONCERNS',\r\n  SET_SENSITIVITIES: 'SET_SENSITIVITIES',\r\n  SET_REFERENCE_DATA: 'SET_REFERENCE_DATA',\r\n  SET_LOADING: 'SET_LOADING',\r\n  SET_ERROR: 'SET_ERROR',\r\n  SET_QUIZ_RESULTS: 'SET_QUIZ_RESULTS',\r\n  RESET_QUIZ: 'RESET_QUIZ',\r\n  TOGGLE_CONCERN: 'TOGGLE_CONCERN',\r\n  TOGGLE_SENSITIVITY: 'TOGGLE_SENSITIVITY'\r\n};\r\n\r\n// Reducer function\r\nfunction quizReducer(state, action) {\r\n  switch (action.type) {\r\n    case quizActions.SET_SESSION_ID:\r\n      return {\r\n        ...state,\r\n        sessionId: action.payload,\r\n        error: null\r\n      };\r\n      \r\n    case quizActions.SET_CURRENT_STEP:\r\n      return {\r\n        ...state,\r\n        currentStep: action.payload\r\n      };\r\n      \r\n    case quizActions.SET_SKIN_TYPE:\r\n      return {\r\n        ...state,\r\n        skinType: typeof action.payload === 'string' ? action.payload : action.payload.skinType,\r\n        skinTypeMethod: typeof action.payload === 'object' ? action.payload.method || 'self_selected' : 'self_selected'\r\n      };\r\n      \r\n    case quizActions.SET_CONCERNS:\r\n      return {\r\n        ...state,\r\n        concerns: Array.isArray(action.payload) ? action.payload : []\r\n      };\r\n      \r\n    case quizActions.TOGGLE_CONCERN:\r\n      const concernExists = state.concerns.includes(action.payload);\r\n      return {\r\n        ...state,\r\n        concerns: concernExists \r\n          ? state.concerns.filter(c => c !== action.payload)\r\n          : [...state.concerns, action.payload]\r\n      };\r\n      \r\n    case quizActions.SET_SENSITIVITIES:\r\n      return {\r\n        ...state,\r\n        sensitivities: Array.isArray(action.payload) ? action.payload : []\r\n      };\r\n      \r\n    case quizActions.TOGGLE_SENSITIVITY:\r\n      const sensitivityExists = state.sensitivities.includes(action.payload);\r\n      return {\r\n        ...state,\r\n        sensitivities: sensitivityExists\r\n          ? state.sensitivities.filter(s => s !== action.payload)\r\n          : [...state.sensitivities, action.payload]\r\n      };\r\n      \r\n    case quizActions.SET_REFERENCE_DATA:\r\n      return {\r\n        ...state,\r\n        referenceData: {\r\n          skin_types: action.payload.skin_types || [],\r\n          skin_concerns: action.payload.skin_concerns || [],\r\n          allergen_types: action.payload.allergen_types || []\r\n        },\r\n        error: null\r\n      };\r\n      \r\n    case quizActions.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: Boolean(action.payload)\r\n      };\r\n      \r\n    case quizActions.SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isLoading: false\r\n      };\r\n      \r\n    case quizActions.SET_QUIZ_RESULTS:\r\n      return {\r\n        ...state,\r\n        quizId: action.payload.quiz_id,\r\n        recommendations: Array.isArray(action.payload.recommendations) ? action.payload.recommendations : [],\r\n        completed: true,\r\n        isLoading: false,\r\n        error: null\r\n      };\r\n      \r\n    case quizActions.RESET_QUIZ:\r\n      return {\r\n        ...initialState,\r\n        referenceData: state.referenceData // Keep reference data\r\n      };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Context Provider\r\nexport function QuizProvider({ children }) {\r\n  const [state, dispatch] = useReducer(quizReducer, initialState);\r\n  \r\n  // API Base URL\r\n  const API_BASE = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n  \r\n  // Helper functions\r\n  const setLoading = useCallback((loading) => {\r\n    dispatch({ type: quizActions.SET_LOADING, payload: loading });\r\n  }, []);\r\n  \r\n  const setError = useCallback((error) => {\r\n    dispatch({ type: quizActions.SET_ERROR, payload: error });\r\n  }, []);\r\n  \r\n  // API Functions - ADD MISSING FUNCTIONS\r\n  const startQuiz = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      console.log('🚀 Starting quiz session...');\r\n      const response = await fetch(`${API_BASE}/quiz/start`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        dispatch({ type: quizActions.SET_SESSION_ID, payload: data.data.session_id });\r\n        console.log('✅ Quiz session started:', data.data.session_id);\r\n        return data.data.session_id;\r\n      } else {\r\n        throw new Error(data.message || 'Failed to start quiz');\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Start quiz error:', error);\r\n      setError(error.message || 'Failed to start quiz session');\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [API_BASE, setLoading, setError]);\r\n  \r\n  const fetchReferenceData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      console.log('📋 Fetching reference data...');\r\n      const response = await fetch(`${API_BASE}/quiz/reference-data`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        console.log('✅ Reference data loaded:', data.data);\r\n        dispatch({ type: quizActions.SET_REFERENCE_DATA, payload: data.data });\r\n        return data.data;\r\n      } else {\r\n        throw new Error(data.message || 'Failed to fetch reference data');\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Fetch reference data error:', error);\r\n      setError(error.message || 'Failed to load quiz data');\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [API_BASE, setLoading, setError]);\r\n  \r\n  const submitQuiz = useCallback(async () => {\r\n    if (!state.sessionId || !state.skinType) {\r\n      setError('Missing required quiz data');\r\n      return null;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      console.log('📝 Submitting quiz...', { \r\n        sessionId: state.sessionId, \r\n        skinType: state.skinType, \r\n        concerns: state.concerns, \r\n        sensitivities: state.sensitivities \r\n      });\r\n      \r\n      const response = await fetch(`${API_BASE}/quiz/submit`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          session_id: state.sessionId,\r\n          skin_type: state.skinType,\r\n          concerns: state.concerns,\r\n          sensitivities: state.sensitivities\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        console.log('✅ Quiz submitted successfully:', data.data);\r\n        dispatch({ type: quizActions.SET_QUIZ_RESULTS, payload: data.data });\r\n        return data.data;\r\n      } else {\r\n        throw new Error(data.message || 'Failed to submit quiz');\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Submit quiz error:', error);\r\n      setError(error.message || 'Failed to submit quiz');\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [state.sessionId, state.skinType, state.concerns, state.sensitivities, API_BASE, setLoading, setError]);\r\n  \r\n  const fetchRecommendations = useCallback(async (sessionId = state.sessionId) => {\r\n    if (!sessionId) {\r\n      setError('No session ID available');\r\n      return null;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      console.log('🎯 Fetching recommendations for:', sessionId);\r\n      const response = await fetch(`${API_BASE}/recommendations/${sessionId}`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        console.log('✅ Recommendations loaded:', data.data.recommendations);\r\n        dispatch({ \r\n          type: quizActions.SET_QUIZ_RESULTS, \r\n          payload: { \r\n            quiz_id: state.quizId || Date.now(),\r\n            recommendations: data.data.recommendations \r\n          }\r\n        });\r\n        return data.data.recommendations;\r\n      } else {\r\n        throw new Error(data.message || 'Failed to fetch recommendations');\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Fetch recommendations error:', error);\r\n      setError(error.message || 'Failed to load recommendations');\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [state.sessionId, state.quizId, API_BASE, setLoading, setError]);\r\n  \r\n  // Basic Actions - KEEP EXISTING INTERFACE\r\n  const actions = {\r\n    // Data setters\r\n    setSessionId: (sessionId) => {\r\n      dispatch({ type: quizActions.SET_SESSION_ID, payload: sessionId });\r\n    },\r\n    \r\n    setCurrentStep: (step) => {\r\n      dispatch({ type: quizActions.SET_CURRENT_STEP, payload: step });\r\n    },\r\n    \r\n    setSkinType: (skinType, method = 'self_selected') => {\r\n      dispatch({ \r\n        type: quizActions.SET_SKIN_TYPE, \r\n        payload: typeof skinType === 'string' ? skinType : { skinType, method }\r\n      });\r\n    },\r\n    \r\n    setConcerns: (concerns) => {\r\n      dispatch({ type: quizActions.SET_CONCERNS, payload: concerns });\r\n    },\r\n    \r\n    toggleConcern: (concern) => {\r\n      dispatch({ type: quizActions.TOGGLE_CONCERN, payload: concern });\r\n    },\r\n    \r\n    setSensitivities: (sensitivities) => {\r\n      dispatch({ type: quizActions.SET_SENSITIVITIES, payload: sensitivities });\r\n    },\r\n    \r\n    toggleSensitivity: (sensitivity) => {\r\n      dispatch({ type: quizActions.TOGGLE_SENSITIVITY, payload: sensitivity });\r\n    },\r\n    \r\n    setReferenceData: (data) => {\r\n      dispatch({ type: quizActions.SET_REFERENCE_DATA, payload: data });\r\n    },\r\n    \r\n    setLoading,\r\n    \r\n    setError,\r\n    \r\n    setQuizResults: (results) => {\r\n      dispatch({ type: quizActions.SET_QUIZ_RESULTS, payload: results });\r\n    },\r\n    \r\n    resetQuiz: () => {\r\n      dispatch({ type: quizActions.RESET_QUIZ });\r\n    },\r\n    \r\n    // Navigation helpers - KEEP EXISTING INTERFACE\r\n    nextStep: () => {\r\n      if (state.currentStep < state.totalSteps) {\r\n        dispatch({ \r\n          type: quizActions.SET_CURRENT_STEP, \r\n          payload: state.currentStep + 1 \r\n        });\r\n      }\r\n    },\r\n    \r\n    prevStep: () => {\r\n      if (state.currentStep > 1) {\r\n        dispatch({ \r\n          type: quizActions.SET_CURRENT_STEP, \r\n          payload: state.currentStep - 1 \r\n        });\r\n      }\r\n    },\r\n    \r\n    // Validation helpers - KEEP EXISTING INTERFACE\r\n    isCurrentStepValid: () => {\r\n      switch (state.currentStep) {\r\n        case 1:\r\n          return !!state.skinType;\r\n        case 2:\r\n          return true; // Concerns are optional\r\n        case 3:\r\n          return true; // Sensitivities are optional\r\n        default:\r\n          return false;\r\n      }\r\n    },\r\n    \r\n    canProceedToNext: () => {\r\n      return actions.isCurrentStepValid() && state.currentStep < state.totalSteps;\r\n    },\r\n    \r\n    canGoBack: () => {\r\n      return state.currentStep > 1;\r\n    },\r\n    \r\n    // API Functions - ADD MISSING FUNCTIONS\r\n    startQuiz,\r\n    fetchReferenceData,\r\n    submitQuiz,\r\n    fetchRecommendations\r\n  };\r\n  \r\n  const value = {\r\n    ...state,\r\n    ...actions\r\n  };\r\n  \r\n  return (\r\n    <QuizContext.Provider value={value}>\r\n      {children}\r\n    </QuizContext.Provider>\r\n  );\r\n}\r\n\r\n// Custom hook\r\nexport function useQuiz() {\r\n  const context = useContext(QuizContext);\r\n  if (!context) {\r\n    throw new Error('useQuiz must be used within a QuizProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { quizActions };\r\nexport default QuizContext;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElF,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,MAAMO,YAAY,GAAG;EACnB;EACAC,SAAS,EAAE,IAAI;EACfC,WAAW,EAAE,CAAC;EACdC,UAAU,EAAE,CAAC;EAEb;EACAC,QAAQ,EAAE,IAAI;EACdC,cAAc,EAAE,eAAe;EAC/BC,QAAQ,EAAE,EAAE;EACZC,aAAa,EAAE,EAAE;EAEjB;EACAC,aAAa,EAAE;IACbC,UAAU,EAAE,EAAE;IACdC,aAAa,EAAE,EAAE;IACjBC,cAAc,EAAE;EAClB,CAAC;EAED;EACAC,MAAM,EAAE,IAAI;EACZC,eAAe,EAAE,EAAE;EACnBC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE;AACb,CAAC;;AAED;AACA,MAAMC,WAAW,GAAG;EAClBC,cAAc,EAAE,gBAAgB;EAChCC,gBAAgB,EAAE,kBAAkB;EACpCC,aAAa,EAAE,eAAe;EAC9BC,YAAY,EAAE,cAAc;EAC5BC,iBAAiB,EAAE,mBAAmB;EACtCC,kBAAkB,EAAE,oBAAoB;EACxCC,WAAW,EAAE,aAAa;EAC1BC,SAAS,EAAE,WAAW;EACtBC,gBAAgB,EAAE,kBAAkB;EACpCC,UAAU,EAAE,YAAY;EACxBC,cAAc,EAAE,gBAAgB;EAChCC,kBAAkB,EAAE;AACtB,CAAC;;AAED;AACA,SAASC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAClC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKhB,WAAW,CAACC,cAAc;MAC7B,OAAO;QACL,GAAGa,KAAK;QACR9B,SAAS,EAAE+B,MAAM,CAACE,OAAO;QACzBnB,KAAK,EAAE;MACT,CAAC;IAEH,KAAKE,WAAW,CAACE,gBAAgB;MAC/B,OAAO;QACL,GAAGY,KAAK;QACR7B,WAAW,EAAE8B,MAAM,CAACE;MACtB,CAAC;IAEH,KAAKjB,WAAW,CAACG,aAAa;MAC5B,OAAO;QACL,GAAGW,KAAK;QACR3B,QAAQ,EAAE,OAAO4B,MAAM,CAACE,OAAO,KAAK,QAAQ,GAAGF,MAAM,CAACE,OAAO,GAAGF,MAAM,CAACE,OAAO,CAAC9B,QAAQ;QACvFC,cAAc,EAAE,OAAO2B,MAAM,CAACE,OAAO,KAAK,QAAQ,GAAGF,MAAM,CAACE,OAAO,CAACC,MAAM,IAAI,eAAe,GAAG;MAClG,CAAC;IAEH,KAAKlB,WAAW,CAACI,YAAY;MAC3B,OAAO;QACL,GAAGU,KAAK;QACRzB,QAAQ,EAAE8B,KAAK,CAACC,OAAO,CAACL,MAAM,CAACE,OAAO,CAAC,GAAGF,MAAM,CAACE,OAAO,GAAG;MAC7D,CAAC;IAEH,KAAKjB,WAAW,CAACW,cAAc;MAC7B,MAAMU,aAAa,GAAGP,KAAK,CAACzB,QAAQ,CAACiC,QAAQ,CAACP,MAAM,CAACE,OAAO,CAAC;MAC7D,OAAO;QACL,GAAGH,KAAK;QACRzB,QAAQ,EAAEgC,aAAa,GACnBP,KAAK,CAACzB,QAAQ,CAACkC,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKT,MAAM,CAACE,OAAO,CAAC,GAChD,CAAC,GAAGH,KAAK,CAACzB,QAAQ,EAAE0B,MAAM,CAACE,OAAO;MACxC,CAAC;IAEH,KAAKjB,WAAW,CAACK,iBAAiB;MAChC,OAAO;QACL,GAAGS,KAAK;QACRxB,aAAa,EAAE6B,KAAK,CAACC,OAAO,CAACL,MAAM,CAACE,OAAO,CAAC,GAAGF,MAAM,CAACE,OAAO,GAAG;MAClE,CAAC;IAEH,KAAKjB,WAAW,CAACY,kBAAkB;MACjC,MAAMa,iBAAiB,GAAGX,KAAK,CAACxB,aAAa,CAACgC,QAAQ,CAACP,MAAM,CAACE,OAAO,CAAC;MACtE,OAAO;QACL,GAAGH,KAAK;QACRxB,aAAa,EAAEmC,iBAAiB,GAC5BX,KAAK,CAACxB,aAAa,CAACiC,MAAM,CAACG,CAAC,IAAIA,CAAC,KAAKX,MAAM,CAACE,OAAO,CAAC,GACrD,CAAC,GAAGH,KAAK,CAACxB,aAAa,EAAEyB,MAAM,CAACE,OAAO;MAC7C,CAAC;IAEH,KAAKjB,WAAW,CAACM,kBAAkB;MACjC,OAAO;QACL,GAAGQ,KAAK;QACRvB,aAAa,EAAE;UACbC,UAAU,EAAEuB,MAAM,CAACE,OAAO,CAACzB,UAAU,IAAI,EAAE;UAC3CC,aAAa,EAAEsB,MAAM,CAACE,OAAO,CAACxB,aAAa,IAAI,EAAE;UACjDC,cAAc,EAAEqB,MAAM,CAACE,OAAO,CAACvB,cAAc,IAAI;QACnD,CAAC;QACDI,KAAK,EAAE;MACT,CAAC;IAEH,KAAKE,WAAW,CAACO,WAAW;MAC1B,OAAO;QACL,GAAGO,KAAK;QACRjB,SAAS,EAAE8B,OAAO,CAACZ,MAAM,CAACE,OAAO;MACnC,CAAC;IAEH,KAAKjB,WAAW,CAACQ,SAAS;MACxB,OAAO;QACL,GAAGM,KAAK;QACRhB,KAAK,EAAEiB,MAAM,CAACE,OAAO;QACrBpB,SAAS,EAAE;MACb,CAAC;IAEH,KAAKG,WAAW,CAACS,gBAAgB;MAC/B,OAAO;QACL,GAAGK,KAAK;QACRnB,MAAM,EAAEoB,MAAM,CAACE,OAAO,CAACW,OAAO;QAC9BhC,eAAe,EAAEuB,KAAK,CAACC,OAAO,CAACL,MAAM,CAACE,OAAO,CAACrB,eAAe,CAAC,GAAGmB,MAAM,CAACE,OAAO,CAACrB,eAAe,GAAG,EAAE;QACpGG,SAAS,EAAE,IAAI;QACfF,SAAS,EAAE,KAAK;QAChBC,KAAK,EAAE;MACT,CAAC;IAEH,KAAKE,WAAW,CAACU,UAAU;MACzB,OAAO;QACL,GAAG3B,YAAY;QACfQ,aAAa,EAAEuB,KAAK,CAACvB,aAAa,CAAC;MACrC,CAAC;IAEH;MACE,OAAOuB,KAAK;EAChB;AACF;;AAEA;AACA,OAAO,SAASe,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACjB,KAAK,EAAEkB,QAAQ,CAAC,GAAGtD,UAAU,CAACmC,WAAW,EAAE9B,YAAY,CAAC;;EAE/D;EACA,MAAMkD,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;EAE7E;EACA,MAAMC,UAAU,GAAG1D,WAAW,CAAE2D,OAAO,IAAK;IAC1CN,QAAQ,CAAC;MAAEhB,IAAI,EAAEhB,WAAW,CAACO,WAAW;MAAEU,OAAO,EAAEqB;IAAQ,CAAC,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,QAAQ,GAAG5D,WAAW,CAAEmB,KAAK,IAAK;IACtCkC,QAAQ,CAAC;MAAEhB,IAAI,EAAEhB,WAAW,CAACQ,SAAS;MAAES,OAAO,EAAEnB;IAAM,CAAC,CAAC;EAC3D,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM0C,SAAS,GAAG7D,WAAW,CAAC,YAAY;IACxC0D,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACFE,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGX,QAAQ,aAAa,EAAE;QACrDf,MAAM,EAAE,MAAM;QACd2B,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAChD,CAAC,CAAC;MAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBJ,QAAQ,CAACK,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChBnB,QAAQ,CAAC;UAAEhB,IAAI,EAAEhB,WAAW,CAACC,cAAc;UAAEgB,OAAO,EAAEgC,IAAI,CAACA,IAAI,CAACG;QAAW,CAAC,CAAC;QAC7EX,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEO,IAAI,CAACA,IAAI,CAACG,UAAU,CAAC;QAC5D,OAAOH,IAAI,CAACA,IAAI,CAACG,UAAU;MAC7B,CAAC,MAAM;QACL,MAAM,IAAIL,KAAK,CAACE,IAAI,CAACI,OAAO,IAAI,sBAAsB,CAAC;MACzD;IACF,CAAC,CAAC,OAAOvD,KAAK,EAAE;MACd2C,OAAO,CAAC3C,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CyC,QAAQ,CAACzC,KAAK,CAACuD,OAAO,IAAI,8BAA8B,CAAC;MACzD,OAAO,IAAI;IACb,CAAC,SAAS;MACRhB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACJ,QAAQ,EAAEI,UAAU,EAAEE,QAAQ,CAAC,CAAC;EAEpC,MAAMe,kBAAkB,GAAG3E,WAAW,CAAC,YAAY;IACjD0D,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACFE,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGX,QAAQ,sBAAsB,CAAC;MAE/D,IAAI,CAACU,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBJ,QAAQ,CAACK,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChBV,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEO,IAAI,CAACA,IAAI,CAAC;QAClDjB,QAAQ,CAAC;UAAEhB,IAAI,EAAEhB,WAAW,CAACM,kBAAkB;UAAEW,OAAO,EAAEgC,IAAI,CAACA;QAAK,CAAC,CAAC;QACtE,OAAOA,IAAI,CAACA,IAAI;MAClB,CAAC,MAAM;QACL,MAAM,IAAIF,KAAK,CAACE,IAAI,CAACI,OAAO,IAAI,gCAAgC,CAAC;MACnE;IACF,CAAC,CAAC,OAAOvD,KAAK,EAAE;MACd2C,OAAO,CAAC3C,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDyC,QAAQ,CAACzC,KAAK,CAACuD,OAAO,IAAI,0BAA0B,CAAC;MACrD,OAAO,IAAI;IACb,CAAC,SAAS;MACRhB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACJ,QAAQ,EAAEI,UAAU,EAAEE,QAAQ,CAAC,CAAC;EAEpC,MAAMgB,UAAU,GAAG5E,WAAW,CAAC,YAAY;IACzC,IAAI,CAACmC,KAAK,CAAC9B,SAAS,IAAI,CAAC8B,KAAK,CAAC3B,QAAQ,EAAE;MACvCoD,QAAQ,CAAC,4BAA4B,CAAC;MACtC,OAAO,IAAI;IACb;IAEAF,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACFE,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE;QACnC1D,SAAS,EAAE8B,KAAK,CAAC9B,SAAS;QAC1BG,QAAQ,EAAE2B,KAAK,CAAC3B,QAAQ;QACxBE,QAAQ,EAAEyB,KAAK,CAACzB,QAAQ;QACxBC,aAAa,EAAEwB,KAAK,CAACxB;MACvB,CAAC,CAAC;MAEF,MAAMqD,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGX,QAAQ,cAAc,EAAE;QACtDf,MAAM,EAAE,MAAM;QACd2B,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CW,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBN,UAAU,EAAEtC,KAAK,CAAC9B,SAAS;UAC3B2E,SAAS,EAAE7C,KAAK,CAAC3B,QAAQ;UACzBE,QAAQ,EAAEyB,KAAK,CAACzB,QAAQ;UACxBC,aAAa,EAAEwB,KAAK,CAACxB;QACvB,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACqD,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBJ,QAAQ,CAACK,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChBV,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEO,IAAI,CAACA,IAAI,CAAC;QACxDjB,QAAQ,CAAC;UAAEhB,IAAI,EAAEhB,WAAW,CAACS,gBAAgB;UAAEQ,OAAO,EAAEgC,IAAI,CAACA;QAAK,CAAC,CAAC;QACpE,OAAOA,IAAI,CAACA,IAAI;MAClB,CAAC,MAAM;QACL,MAAM,IAAIF,KAAK,CAACE,IAAI,CAACI,OAAO,IAAI,uBAAuB,CAAC;MAC1D;IACF,CAAC,CAAC,OAAOvD,KAAK,EAAE;MACd2C,OAAO,CAAC3C,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CyC,QAAQ,CAACzC,KAAK,CAACuD,OAAO,IAAI,uBAAuB,CAAC;MAClD,OAAO,IAAI;IACb,CAAC,SAAS;MACRhB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACvB,KAAK,CAAC9B,SAAS,EAAE8B,KAAK,CAAC3B,QAAQ,EAAE2B,KAAK,CAACzB,QAAQ,EAAEyB,KAAK,CAACxB,aAAa,EAAE2C,QAAQ,EAAEI,UAAU,EAAEE,QAAQ,CAAC,CAAC;EAE1G,MAAMqB,oBAAoB,GAAGjF,WAAW,CAAC,OAAOK,SAAS,GAAG8B,KAAK,CAAC9B,SAAS,KAAK;IAC9E,IAAI,CAACA,SAAS,EAAE;MACduD,QAAQ,CAAC,yBAAyB,CAAC;MACnC,OAAO,IAAI;IACb;IAEAF,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACFE,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAE1D,SAAS,CAAC;MAC1D,MAAM2D,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGX,QAAQ,oBAAoBjD,SAAS,EAAE,CAAC;MAExE,IAAI,CAAC2D,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBJ,QAAQ,CAACK,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChBV,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEO,IAAI,CAACA,IAAI,CAACrD,eAAe,CAAC;QACnEoC,QAAQ,CAAC;UACPhB,IAAI,EAAEhB,WAAW,CAACS,gBAAgB;UAClCQ,OAAO,EAAE;YACPW,OAAO,EAAEd,KAAK,CAACnB,MAAM,IAAIkE,IAAI,CAACC,GAAG,CAAC,CAAC;YACnClE,eAAe,EAAEqD,IAAI,CAACA,IAAI,CAACrD;UAC7B;QACF,CAAC,CAAC;QACF,OAAOqD,IAAI,CAACA,IAAI,CAACrD,eAAe;MAClC,CAAC,MAAM;QACL,MAAM,IAAImD,KAAK,CAACE,IAAI,CAACI,OAAO,IAAI,iCAAiC,CAAC;MACpE;IACF,CAAC,CAAC,OAAOvD,KAAK,EAAE;MACd2C,OAAO,CAAC3C,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDyC,QAAQ,CAACzC,KAAK,CAACuD,OAAO,IAAI,gCAAgC,CAAC;MAC3D,OAAO,IAAI;IACb,CAAC,SAAS;MACRhB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACvB,KAAK,CAAC9B,SAAS,EAAE8B,KAAK,CAACnB,MAAM,EAAEsC,QAAQ,EAAEI,UAAU,EAAEE,QAAQ,CAAC,CAAC;;EAEnE;EACA,MAAMwB,OAAO,GAAG;IACd;IACAC,YAAY,EAAGhF,SAAS,IAAK;MAC3BgD,QAAQ,CAAC;QAAEhB,IAAI,EAAEhB,WAAW,CAACC,cAAc;QAAEgB,OAAO,EAAEjC;MAAU,CAAC,CAAC;IACpE,CAAC;IAEDiF,cAAc,EAAGC,IAAI,IAAK;MACxBlC,QAAQ,CAAC;QAAEhB,IAAI,EAAEhB,WAAW,CAACE,gBAAgB;QAAEe,OAAO,EAAEiD;MAAK,CAAC,CAAC;IACjE,CAAC;IAEDC,WAAW,EAAEA,CAAChF,QAAQ,EAAE+B,MAAM,GAAG,eAAe,KAAK;MACnDc,QAAQ,CAAC;QACPhB,IAAI,EAAEhB,WAAW,CAACG,aAAa;QAC/Bc,OAAO,EAAE,OAAO9B,QAAQ,KAAK,QAAQ,GAAGA,QAAQ,GAAG;UAAEA,QAAQ;UAAE+B;QAAO;MACxE,CAAC,CAAC;IACJ,CAAC;IAEDkD,WAAW,EAAG/E,QAAQ,IAAK;MACzB2C,QAAQ,CAAC;QAAEhB,IAAI,EAAEhB,WAAW,CAACI,YAAY;QAAEa,OAAO,EAAE5B;MAAS,CAAC,CAAC;IACjE,CAAC;IAEDgF,aAAa,EAAGC,OAAO,IAAK;MAC1BtC,QAAQ,CAAC;QAAEhB,IAAI,EAAEhB,WAAW,CAACW,cAAc;QAAEM,OAAO,EAAEqD;MAAQ,CAAC,CAAC;IAClE,CAAC;IAEDC,gBAAgB,EAAGjF,aAAa,IAAK;MACnC0C,QAAQ,CAAC;QAAEhB,IAAI,EAAEhB,WAAW,CAACK,iBAAiB;QAAEY,OAAO,EAAE3B;MAAc,CAAC,CAAC;IAC3E,CAAC;IAEDkF,iBAAiB,EAAGC,WAAW,IAAK;MAClCzC,QAAQ,CAAC;QAAEhB,IAAI,EAAEhB,WAAW,CAACY,kBAAkB;QAAEK,OAAO,EAAEwD;MAAY,CAAC,CAAC;IAC1E,CAAC;IAEDC,gBAAgB,EAAGzB,IAAI,IAAK;MAC1BjB,QAAQ,CAAC;QAAEhB,IAAI,EAAEhB,WAAW,CAACM,kBAAkB;QAAEW,OAAO,EAAEgC;MAAK,CAAC,CAAC;IACnE,CAAC;IAEDZ,UAAU;IAEVE,QAAQ;IAERoC,cAAc,EAAGC,OAAO,IAAK;MAC3B5C,QAAQ,CAAC;QAAEhB,IAAI,EAAEhB,WAAW,CAACS,gBAAgB;QAAEQ,OAAO,EAAE2D;MAAQ,CAAC,CAAC;IACpE,CAAC;IAEDC,SAAS,EAAEA,CAAA,KAAM;MACf7C,QAAQ,CAAC;QAAEhB,IAAI,EAAEhB,WAAW,CAACU;MAAW,CAAC,CAAC;IAC5C,CAAC;IAED;IACAoE,QAAQ,EAAEA,CAAA,KAAM;MACd,IAAIhE,KAAK,CAAC7B,WAAW,GAAG6B,KAAK,CAAC5B,UAAU,EAAE;QACxC8C,QAAQ,CAAC;UACPhB,IAAI,EAAEhB,WAAW,CAACE,gBAAgB;UAClCe,OAAO,EAAEH,KAAK,CAAC7B,WAAW,GAAG;QAC/B,CAAC,CAAC;MACJ;IACF,CAAC;IAED8F,QAAQ,EAAEA,CAAA,KAAM;MACd,IAAIjE,KAAK,CAAC7B,WAAW,GAAG,CAAC,EAAE;QACzB+C,QAAQ,CAAC;UACPhB,IAAI,EAAEhB,WAAW,CAACE,gBAAgB;UAClCe,OAAO,EAAEH,KAAK,CAAC7B,WAAW,GAAG;QAC/B,CAAC,CAAC;MACJ;IACF,CAAC;IAED;IACA+F,kBAAkB,EAAEA,CAAA,KAAM;MACxB,QAAQlE,KAAK,CAAC7B,WAAW;QACvB,KAAK,CAAC;UACJ,OAAO,CAAC,CAAC6B,KAAK,CAAC3B,QAAQ;QACzB,KAAK,CAAC;UACJ,OAAO,IAAI;QAAE;QACf,KAAK,CAAC;UACJ,OAAO,IAAI;QAAE;QACf;UACE,OAAO,KAAK;MAChB;IACF,CAAC;IAED8F,gBAAgB,EAAEA,CAAA,KAAM;MACtB,OAAOlB,OAAO,CAACiB,kBAAkB,CAAC,CAAC,IAAIlE,KAAK,CAAC7B,WAAW,GAAG6B,KAAK,CAAC5B,UAAU;IAC7E,CAAC;IAEDgG,SAAS,EAAEA,CAAA,KAAM;MACf,OAAOpE,KAAK,CAAC7B,WAAW,GAAG,CAAC;IAC9B,CAAC;IAED;IACAuD,SAAS;IACTc,kBAAkB;IAClBC,UAAU;IACVK;EACF,CAAC;EAED,MAAMuB,KAAK,GAAG;IACZ,GAAGrE,KAAK;IACR,GAAGiD;EACL,CAAC;EAED,oBACElF,OAAA,CAACC,WAAW,CAACsG,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAArD,QAAA,EAChCA;EAAQ;IAAAuD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;;AAEA;AAAAzD,EAAA,CAxRgBF,YAAY;AAAA4D,EAAA,GAAZ5D,YAAY;AAyR5B,OAAO,SAAS6D,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACxB,MAAMC,OAAO,GAAGnH,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAAC8G,OAAO,EAAE;IACZ,MAAM,IAAI7C,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAO6C,OAAO;AAChB;AAACD,GAAA,CANeD,OAAO;AAQvB,SAAS1F,WAAW;AACpB,eAAelB,WAAW;AAAC,IAAA2G,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}